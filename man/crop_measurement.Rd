% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cropping.R
\name{crop_measurement}
\alias{crop_measurement}
\title{Crop Time Series}
\usage{
crop_measurement(file, write.files = TRUE)
}
\arguments{
\item{file}{File path to measurement.}

\item{write.files}{A logical value indicating if results should be
written as file. Default: \code{TRUE}.}
}
\value{
Returns and, if \code{write.files == TRUE}, saves cropped data in
CSV-format in new subfolder "./cropped". If this folder does not exist,
it will be created. \cr
\cr
The tibble has the following format:\tabular{ccc}{
   \strong{\code{t}} \tab  \tab \strong{\code{y}} \cr
   \code{t.1} \tab  \tab \code{y.1} \cr
   \code{...} \tab  \tab \code{...} \cr
   \code{t.n} \tab  \tab \code{y.n} \cr
}
}
\description{
Interactive function to crop a time series.
}
\details{
Select points at start and end of desired part of measurements.
Only the last two points will be
taken into account to allow the user to correct erroneous clicks.
}
\examples{
# get file path of forceR example file
filename <- forceR_example(type = "raw")

# plot measurement
plot_measurement(filename)

# crop file - without storing result as file
file.cropped <- crop_measurement(file,
                  write.files = FALSE)

file.cropped

\donttest{
# crop file - with result stored in "./cropped"
crop_measurement(filename,
                  write.files = TRUE)

# plot results
# define folder where cropped file wass stored:
cropped.folder <- "./cropped"

# plot the cropped file - this will only work if you used your own
filename.cropped <- file.path(dirname(filename), "cropped",
                                gsub("\\\\.csv", '_cropped.csv', basename(filename)))

# plot the cropped file
plot_measurement(filename.cropped)
}
}
