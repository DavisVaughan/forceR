% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_series_manipulations.R
\name{reduce_frq}
\alias{reduce_frq}
\title{Reduce Sampling Frequency}
\usage{
reduce_frq(df, Hz = 200, measurement.col = NULL)
}
\arguments{
\item{df}{Data frame or tibble in the below mentioned format.}

\item{Hz}{Numeric value of desired frequency. Fedault \code{200}}

\item{measurement.col}{Character string. If \code{measurement.col} is not defined, the whole input data frames will be
treated as if it was just one single time series. This is okay for data frames like that indeed only conatin one
time series, but for data frames
with multiple time series, a grouping column needs to be defined. Default: \code{NULL}}
}
\value{
Returns a tibble reduced to the desired frequency in the following format:\tabular{cc}{
   \strong{\code{t}} \tab \strong{\code{y}} \cr
   \code{t.1} \tab \code{y.1} \cr
   \code{...} \tab \code{...} \cr
   \code{t.n} \tab \code{y.n} \cr
}


or, if \code{measurement.col} is not \code{NULL}, then\tabular{ccc}{
   \strong{\code{t}} \tab \strong{\code{y}} \tab \strong{\code{measurement.col}} \cr
   \code{t.1} \tab \code{y.1} \tab \code{...} \cr
   \code{...} \tab \code{...} \tab \code{...} \cr
   \code{t.n} \tab \code{y.n} \tab \code{...} \cr
}
}
\description{
Reduces the sampling frequency to a certain Hz value. If the desired frequency is smaller than the
original frequency, the data remains unchanged.
}
\details{
The input data frame or tibble should have the following format:\tabular{cc}{
   \strong{\code{t}} \tab \strong{\code{y}} \cr
   \code{t.1} \tab \code{y.1} \cr
   \code{...} \tab \code{...} \cr
   \code{t.n} \tab \code{y.n} \cr
}


or, if \code{measurement.col} is not \code{NULL}, then\tabular{ccc}{
   \strong{\code{t}} \tab \strong{\code{y}} \tab \strong{\code{measurement.col}} \cr
   \code{t.1} \tab \code{y.1} \tab \code{...} \cr
   \code{...} \tab \code{...} \tab \code{...} \cr
   \code{t.n} \tab \code{y.n} \tab \code{...} \cr
}


Since, when not \code{NULL}, the \code{measurement.col} is called by its character string, the position of the column does not matter, except it
must not be among the first two columns which are reserved for \code{t} and \code{y}.

All columns except the first two are removed. Values in \code{t} are expected to be in m.secs.
}
\examples{
require(dplyr)

# simulate a short time series with sinusoidal bites
df.1 <- simulate_bites(no.of.bites = 7,
                       length.of.bite = 100,
                       length.of.series = 1000,
                       max.y = 3,
                       max.y.jit = 15,
                       jit = 0.5,
                       bite.type = "sin",
                       plot = TRUE)
df.1$measurement <- "m_01"

# simulate a short time series with plateu-like bites
df.2 <- simulate_bites(no.of.bites = 7,
                       length.of.bite = 150,
                       length.of.series = 1500,
                       max.y = 5,
                       max.y.jit = 15,
                       jit = 2,
                       bite.type = "plat",
                       plot = TRUE)
df.2$measurement <- "m_02"

# combine tibbles
df.all <- rbind(df.1, df.2)

# reduce sampling frequency to 200 Hz
df.all.200 <- reduce_frq(df = df.all,
                         Hz = 200,
                         measurement.col = "measurement")

plot(df.all.200 \%>\%
       filter(measurement == "m_02") \%>\%
       select(t, y),
     type = "l", col = "black")
lines(df.all.200 \%>\%
       filter(measurement == "m_01") \%>\%
       select(t, y),
     type = "l", col = "blue")
}
